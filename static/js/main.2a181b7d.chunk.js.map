{"version":3,"sources":["components/LineChart/index.js","pages/Home/index.js","pages/User/index.js","pages/Search/index.js","pages/Coin/index.js","App.js","index.js"],"names":["data","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","LineChart","props","className","Object","entries","forEach","entry","console","log","push","Home","state","bitcoinCurrent","bitcoinHistory","getCoinBaseData","a","axios","setState","this","time","updated","keys","bpi","map","currency","code","rate","React","Component","User","Search","Coin","App","to","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGMA,EAAO,CACXC,OAAQ,GACRC,SAAU,CACR,CACEC,MAAO,YACPH,KAAM,GACNI,MAAM,EACNC,gBAAiB,oBACjBC,YAAa,6BAKbC,EAAU,CACdC,OAAQ,CAENC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,OAyBRC,EAhBG,SAACC,GAAD,OAChB,qCACE,qBAAKC,UAAU,SAAf,SACE,oBAAIA,UAAU,QAAd,4CAEDC,OAAOC,QAAQH,EAAMb,MAAMiB,SAAQ,SAAAC,GAClCC,QAAQC,IAAIF,EAAM,GAAIA,EAAM,IAC5BlB,EAAKC,OAAOoB,KAAKH,EAAM,IACvBlB,EAAKE,SAAS,GAAGF,KAAKqB,KAAKH,EAAM,OAElCC,QAAQC,IAAIpB,EAAKC,QACjBkB,QAAQC,IAAIpB,EAAKE,SAAS,GAAGF,MAC9B,cAAC,IAAD,CAAMA,KAAMA,EAAMO,QAASA,QCkBhBe,E,4MAxDbC,MAAQ,CACNC,eAAgB,KAChBC,eAAgB,M,EAGlBC,gB,sBAAkB,kCAAAC,EAAA,+EAEOC,IAAM,qDAFb,gBAEP5B,EAFO,EAEPA,KACP,EAAK6B,SAAS,CAAEL,eAAgBxB,IAHlB,gDAKdmB,QAAQC,IAAI,kCALE,mCAQOQ,IAAM,yDARb,iBAQP5B,EARO,EAQPA,KACP,EAAK6B,SAAS,CAAEJ,eAAgBzB,IATlB,mDAWdmB,QAAQC,IAAI,kCAXE,iE,uDAgBlB,WACEU,KAAKJ,oB,oBAGL,WACE,IAAMF,EAAiBM,KAAKP,MAAMC,eAC5BC,EAAiBK,KAAKP,MAAME,eACpC,OACE,qCACA,2DACCD,GACC,gCACE,kDACA,wCAAWA,EAAeO,KAAKC,WAC/B,6BACDjB,OAAOkB,KAAKT,EAAeU,KAAKC,KAAI,SAAAC,GACjC,OAAO,+BAA4BZ,EAAeU,IAAIE,GAAUC,KAAzD,KAAiEb,EAAeU,IAAIE,GAAUE,OAArFF,EAAW,eAIhCX,GACC,gCACE,iDACA,wCAAWA,EAAeM,KAAKC,WAE/B,cAAC,EAAD,CAAWhC,KAAMyB,EAAeS,gB,GA/CvBK,IAAMC,WCQVC,E,4JATb,WACE,OACE,8BACE,6D,GAJWF,IAAMC,WCUVE,E,4JATb,WACE,OACE,8BACE,+D,GAJaH,IAAMC,WCUZG,E,4JATb,WACE,OACE,8BACE,6D,GAJWJ,IAAMC,WC8CVI,E,4JAjCb,WACA,OACE,cAAC,IAAD,UACE,gCACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,2BAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1B,IACjC,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,QAAQC,UAAWP,IACrC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,UAAUC,UAAWN,IACvC,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,cAAcC,UAAWL,gB,GAzBnCJ,IAAMC,WCTxBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a181b7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst data = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'USD Price',\r\n      data: [],\r\n      fill: false,\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgba(255, 99, 132, 0.2)',\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    \r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n    \r\n  },\r\n  \r\n};\r\n\r\nconst LineChart = (props) => (\r\n  <>\r\n    <div className='header'>\r\n      <h1 className='title'>Bitcoin Historic Data in USD</h1>\r\n    </div>\r\n    {Object.entries(props.data).forEach(entry => {\r\n      console.log(entry[0], entry[1])\r\n      data.labels.push(entry[0])\r\n      data.datasets[0].data.push(entry[1])\r\n    })}\r\n    {console.log(data.labels)}\r\n    {console.log(data.datasets[0].data)}\r\n    <Line data={data} options={options} />\r\n  </>\r\n);\r\n\r\nexport default LineChart;","import React from 'react';\r\nimport axios from 'axios';\r\nimport LineChart from 'components/LineChart';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    bitcoinCurrent: null,\r\n    bitcoinHistory: null\r\n  }\r\n  \r\n  getCoinBaseData = async () => {\r\n    try {\r\n      const {data} = await axios('https://api.coindesk.com/v1/bpi/currentprice.json');\r\n      this.setState({ bitcoinCurrent: data });\r\n    } catch (err) {\r\n      console.log(\"API bitcoinCurrent Fetch Error\");\r\n    }\r\n    try {\r\n      const {data} = await axios('https://api.coindesk.com/v1/bpi/historical/close.json');\r\n      this.setState({ bitcoinHistory: data });\r\n    } catch (err) {\r\n      console.log(\"API bitcoinHistory Fetch Error\");\r\n    }\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getCoinBaseData();\r\n  }\r\n\r\n    render() {\r\n      const bitcoinCurrent = this.state.bitcoinCurrent;\r\n      const bitcoinHistory = this.state.bitcoinHistory;      \r\n    return (\r\n      <>\r\n      <h2> This is the homepage... </h2>\r\n      {bitcoinCurrent && (        \r\n        <div>\r\n          <h1>1 Bitcoin Equals</h1>\r\n          <h2>Time: {bitcoinCurrent.time.updated}</h2>\r\n          <ul>\r\n        {Object.keys(bitcoinCurrent.bpi).map(currency => {\r\n            return <li key={currency + '123'}>{bitcoinCurrent.bpi[currency].code}: {bitcoinCurrent.bpi[currency].rate}</li>;\r\n        })}\r\n        </ul>\r\n      </div>)}\r\n      {bitcoinHistory && (        \r\n        <div>\r\n          <h1>Historic Prices</h1>\r\n          <h2>Time: {bitcoinHistory.time.updated}</h2>\r\n          \r\n          <LineChart data={bitcoinHistory.bpi}/>\r\n        \r\n        \r\n      </div>)}\r\n      </>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass User extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>This is the user page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\n\r\nclass Search extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>This is the search page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nclass Coin extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>This is the coin page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Coin;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from \"pages/Home\"\nimport User from \"pages/User\"\nimport Search from \"pages/Search\"\nimport Coin from \"pages/Coin\"\n\n\n\nclass App extends React.Component {\n  render(){\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/user\">User</Link>\n            </li>\n            <li>\n              <Link to=\"/search\">Search</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/user\" component={User} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/coin/:name\" component={Coin} />\n        </Switch>\n      </div>\n    </Router>\n  );}\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}